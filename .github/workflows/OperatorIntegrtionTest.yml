# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

name: .github/workflows/OperatorIntegrtionTest.yml
env:
  # Use terraform assume role for uploading to ecr
  AWS_ASSUME_ROLE: ${{ secrets.TERRAFORM_AWS_ASSUME_ROLE }}
  ECR_OPERATOR_STAGING_IMAGE: ${{ secrets.ECR_OPERATOR_STAGING_IMAGE }}

on:
  push:
    branches:
      - addOperatorIntgTest
  workflow_dispatch:
  workflow_call:

jobs:
  IntegrationTest:
    name: 'GenerateTestMatrix'
    runs-on: ubuntu-latest
    steps:
      - name: Get Pod Name
        id: get_pod_name
        run: |
          pod_name=$(kubectl get pods -n amazon-cloudwatch -l app.kubernetes.io/component=amazon-cloudwatch-agent,app.kubernetes.io/instance=amazon-cloudwatch.amazon-cloudwatch-agent -o=jsonpath='{range .items[*]}{.metadata.name}{"\n"}{end}')
          echo "::set-output name=pod_name::$pod_name"
      - name: Check if Pod is running
        run: |
          pod_name="${{ steps.get_pod_name.outputs.pod_name }}"
          status=$(kubectl get pod "$pod_name" -n amazon-cloudwatch -o=jsonpath='{.status.phase}')
          if [ "$status" != "Running" ]; then
              echo "Pod $pod_name is not running. Exiting with error."
              exit 1
          else
              echo "Pod $pod_name is running. Continue with the workflow."
          fi